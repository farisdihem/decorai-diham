// api/generate.js
export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'الطريقة غير مسموحة' });
  }

  const { imageBase64, prompt } = req.body;

  if (!imageBase64 || !prompt) {
    return res.status(400).json({ error: 'الرجاء إرسال الصورة والوصف' });
  }

  const replicateToken = process.env.REPLICATE_API_TOKEN;
  if (!replicateToken) {
    return res.status(500).json({ error: 'مفتاح الذكاء الاصطناعي غير مضبوط' });
  }

  try {
    const response = await fetch('https://api.replicate.com/v1/predictions', {
      method: 'POST',
      headers: {
        'Authorization': `Token ${replicateToken}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        version: "67874c8fa9d518f960eb846e829099e862839b2791113807981148b319680752", // stable-diffusion-inpainting
        input: {
          image: imageBase64,
          prompt: prompt,
          strength: 0.75,
          num_inference_steps: 50,
          guidance_scale: 7.5,
        }
      })
    });

    if (!response.ok) {
      const err = await response.json();
      throw new Error(err.detail || 'فشل في الاتصال بـ Replicate');
    }

    const prediction = await response.json();
    res.status(200).json({ prediction });
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
}

export const config = {
  api: {
    bodyParser: { sizeLimit: '10mb' },
  },
};